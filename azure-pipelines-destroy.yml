# Starter pipeline
# Start with a minimal pipeline that you can customize to build and destroy your code.
# Add steps that build, run tests, destroy, and more:
# https://aka.ms/yaml

trigger: none

pool:
  vmImage: ubuntu-latest

variables:
  bkstrgrg: 'terraform-rg'
  bkstrg: 'stg196c'
  bkcontainer: 'azure-devops'
  bkstrgkey: 'aks-lab.terraform.tfstate'
  aksresourcegroup: 'aks-lab-azdo-rg'
  aksclustername: 'aks-lab-azdo-aks'

stages:
  - stage: tfdestroy
    jobs:
      - job: destroy
        steps:
          - task: TerraformInstaller@1
            displayName: tfInstall
            inputs:
              terraformVersion: 'latest'
          - task: TerraformTaskV4@4
            displayName: init
            inputs:
              provider: 'azurerm'
              command: 'init'
              backendServiceArm: 'Azure subscription 1(f5cdbf92-abd6-4e78-ad23-e0593e9536e6)'
              backendAzureRmResourceGroupName: 'terraform-rg'
              backendAzureRmStorageAccountName: 'stg196c'
              backendAzureRmContainerName: 'azure-devops'
              backendAzureRmKey: 'aks-grafana-prometheus.terraform.tfstate'
          - task: TerraformTaskV4@4
            displayName: plan
            inputs:
              provider: 'azurerm'
              command: 'plan'
              environmentServiceNameAzureRM: 'Azure subscription 1(f5cdbf92-abd6-4e78-ad23-e0593e9536e6)'
          - task: TerraformTaskV4@4
            displayName: destroy
            inputs:
              provider: 'azurerm'
              command: 'destroy'
              environmentServiceNameAzureRM: 'Azure subscription 1(f5cdbf92-abd6-4e78-ad23-e0593e9536e6)'